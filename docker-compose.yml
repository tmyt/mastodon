# This file is designed for production server deployment, not local development work
# For a containerized local dev environment, see: https://github.com/mastodon/mastodon/blob/main/README.md#docker

services:
  # db:
  #   restart: always
  #   image: postgres:14-alpine
  #   shm_size: 256mb
  #   networks:
  #     - internal_network
  #   healthcheck:
  #     test: ['CMD', 'pg_isready', '-U', 'postgres']
  #   volumes:
  #     - ./postgres14:/var/lib/postgresql/data
  #   environment:
  #     - 'POSTGRES_HOST_AUTH_METHOD=trust'

  redis:
    restart: always
    image: redis:7-alpine
    networks:
      - internal_network
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
    volumes:
      - ./redis:/data
    logging:
      driver: json-file
      options:
        max-size: 100m
        max-file: '5'

  es:
    restart: always
    # image: docker.elastic.co/elasticsearch/elasticsearch:7.17.4
    image: es_jp
    environment:
      - 'ES_JAVA_OPTS=-Xms256m -Xmx256m -Des.enforce.bootstrap.checks=true'
      - 'xpack.license.self_generated.type=basic'
      - 'xpack.security.enabled=false'
      - 'xpack.watcher.enabled=false'
      - 'xpack.graph.enabled=false'
      - 'xpack.ml.enabled=false'
      - 'bootstrap.memory_lock=true'
      - 'cluster.name=es-mastodon'
      - 'discovery.type=single-node'
      - 'thread_pool.write.queue_size=1000'
    networks:
      - external_network
      - internal_network
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'curl --silent --fail localhost:9200/_cluster/health || exit 1',
        ]
    volumes:
      - ./elasticsearch:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - '127.0.0.1:9200:9200'
    logging:
      driver: json-file
      options:
        max-size: 100m
        max-file: '5'

  # s3proxy:
  #   restart: always
  #   image: andrewgaul/s3proxy
  #   networks:
  #     - internal_network
  #     - external_network
  #   env_file: .env.production

  web:
    # You can uncomment the following line if you want to not use the prebuilt image, for example if you have local code changes
    # build: .
    image: ghcr.io/tmyt/tech.onsen.mastodon:edge
    restart: always
    env_file: .env.production
    command: bundle exec puma -C config/puma.rb
    networks:
      - external_network
      - internal_network
    healthcheck:
      # prettier-ignore
      test: ['CMD-SHELL',"curl -s --noproxy localhost localhost:3000/health | grep -q 'OK' || exit 1"]
    ports:
      - '127.0.0.1:3000:3000'
    depends_on:
      # - db
      - redis
      - es
      # - s3proxy
    volumes:
      - ./public/system:/mastodon/public/system
    logging:
      driver: json-file
      options:
        max-size: 100m
        max-file: '5'

  streaming:
    # You can uncomment the following lines if you want to not use the prebuilt image, for example if you have local code changes
    # build:
    #   dockerfile: ./streaming/Dockerfile
    #   context: .
    image: ghcr.io/tmyt/tech.onsen.mastodon-streaming:edge
    restart: always
    env_file: .env.production
    command: node ./streaming/index.js
    networks:
      - external_network
      - internal_network
    healthcheck:
      # prettier-ignore
      test: ['CMD-SHELL', "curl -s --noproxy localhost localhost:4000/api/v1/streaming/health | grep -q 'OK' || exit 1"]
    ports:
      - '127.0.0.1:4000:4000'
    depends_on:
      # - db
      - redis
    logging:
      driver: json-file
      options:
        max-size: 100m
        max-file: '5'

  sidekiq:
    build: .
    image: ghcr.io/tmyt/tech.onsen.mastodon:edge
    restart: always
    env_file: .env.production
    environment:
      - MALLOC_ARENA_MAX=2
      - LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libjemalloc.so.2
      - DB_POOL=15
    command: bundle exec sidekiq -c 10 -q pull -q scheduler
    depends_on:
      # - db
      - redis
    networks:
      - external_network
      - internal_network
    volumes:
      - ./public/system:/mastodon/public/system
    healthcheck:
      test: ['CMD-SHELL', "ps aux | grep '[s]idekiq\ 6' || false"]
    mem_limit: 384m
    logging:
      driver: json-file
      options:
        max-size: 100m
        max-file: '5'

  sidekiq-2:
    image: ghcr.io/tmyt/tech.onsen.mastodon:edge
    restart: always
    env_file: .env.production
    environment:
      - MALLOC_ARENA_MAX=2
      - LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libjemalloc.so.2
      - DB_POOL=10
    command: bundle exec sidekiq -c 8 -q default,8 -q push,6 -q mailers,2
    depends_on:
      - redis
    networks:
      - external_network
      - internal_network
    volumes:
      - ./public/system:/mastodon/public/system
    healthcheck:
      test: ['CMD-SHELL', "ps aux | grep '[s]idekiq\ 6' || false"]
    mem_limit: 384m
    logging:
      driver: json-file
      options:
        max-size: 100m
        max-file: '5'

  sidekiq-3:
    image: ghcr.io/tmyt/tech.onsen.mastodon:edge
    restart: always
    env_file: .env.production
    environment:
      - MALLOC_ARENA_MAX=2
      - LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libjemalloc.so.2
      - DB_POOL=10
    command: bundle exec sidekiq -c 7 -q ingress,4
    depends_on:
      - redis
    networks:
      - external_network
      - internal_network
    volumes:
      - ./public/system:/mastodon/public/system
    healthcheck:
      test: ['CMD-SHELL', "ps aux | grep '[s]idekiq\ 6' || false"]
    mem_limit: 384m
    logging:
      driver: json-file
      options:
        max-size: 100m
        max-file: '5'

  ## Uncomment to enable federation with tor instances along with adding the following ENV variables
  ## http_hidden_proxy=http://privoxy:8118
  ## ALLOW_ACCESS_TO_HIDDEN_SERVICE=true
  # tor:
  #   image: sirboops/tor
  #   networks:
  #      - external_network
  #      - internal_network
  #
  # privoxy:
  #   image: sirboops/privoxy
  #   volumes:
  #     - ./priv-config:/opt/config
  #   networks:
  #     - external_network
  #     - internal_network

networks:
  external_network:
  internal_network:
    internal: true
